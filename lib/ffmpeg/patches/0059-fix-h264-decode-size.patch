backport of upstream commits 23acfcd9 and 29a29226

Slightly modified because of differences between upstream code and ours.

---

diff --git a/lib/ffmpeg/libavcodec/h264.c b/lib/ffmpeg/libavcodec/h264.c
index 31d43df..47b0073 100644
--- a/lib/ffmpeg/libavcodec/h264.c
+++ b/lib/ffmpeg/libavcodec/h264.c
@@ -1797,15 +1797,11 @@ static int decode_slice_header(H264Context *h, H264Context *h0){
     s->mb_height= h->sps.mb_height * (2 - h->sps.frame_mbs_only_flag);
 
     h->b_stride=  s->mb_width*4;
-
-    s->width = 16*s->mb_width - 2*FFMIN(h->sps.crop_right, 7);
-    if(h->sps.frame_mbs_only_flag)
-        s->height= 16*s->mb_height - 2*FFMIN(h->sps.crop_bottom, 7);
-    else
-        s->height= 16*s->mb_height - 4*FFMIN(h->sps.crop_bottom, 7);
+    s->width = 16*s->mb_width;
+    s->height= 16*s->mb_height;
 
     if (s->context_initialized
-        && (   s->width != s->avctx->width || s->height != s->avctx->height
+        && (   s->width != s->avctx->coded_width || s->height != s->avctx->coded_height
             || av_cmp_q(h->sps.sar, s->avctx->sample_aspect_ratio))) {
         if(h != h0)
             return -1;   // width / height changed during parallelized decoding
@@ -1818,6 +1814,13 @@ static int decode_slice_header(H264Context *h, H264Context *h0){
             return -1;  // we cant (re-)initialize context during parallel decoding
 
         avcodec_set_dimensions(s->avctx, s->width, s->height);
+
+        s->avctx->width -= 2*FFMIN(h->sps.crop_right, 7);
+        if(h->sps.frame_mbs_only_flag)
+            s->avctx->height-=2*FFMIN(h->sps.crop_bottom, 7);
+        else
+            s->avctx->height-=4*FFMIN(h->sps.crop_bottom, 7);
+
         s->avctx->sample_aspect_ratio= h->sps.sar;
         av_assert0(s->avctx->sample_aspect_ratio.den);
 
